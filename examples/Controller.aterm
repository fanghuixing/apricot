StartApricot(
  CompilationUnit(
    Some(
      PackageDec(
        []
      , PackageName([Id("com"), Id("fofo"), Id("core")])
      )
    )
  , []
  , [ InterfaceDec(
        InterfaceDecHead([], [], None(), Id("Controller"))
      , [ ClockConstraint()
        , Requires(Id("dy"), AmGeOne(), ClassOrInterfaceType(TypeName(Id("Dynamic"))))
        , Requires(Id("ass"), AmGeOne(), ClassOrInterfaceType(TypeName(Id("Assignment"))))
        , AbstractMethodDec(
            []
          , []
          , Void()
          , Id("Composition")
          , []
          , RequiresComp(
              Id("coms")
            , AmGeOne()
            , Asynactions()
            , AmOneOrZero()
            , SwitchTys(
                [ClassOrInterfaceType(TypeName(Id("Dynamic")))]
              , [ClassOrInterfaceType(TypeName(Id("Assignment")))]
              , [ClassOrInterfaceType(TypeName(Id("Dynamic")))]
              )
            , AbstractCond()
            )
          )
        ]
      )
    ]
  )
)