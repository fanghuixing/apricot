module(unparameterized("lexical/literals/IntegerLiterals"),[],[exports(conc-grammars(conc-grammars(conc-grammars(sorts([sort("IntLiteral"),sort("DeciLiteral"),sort("HexaLiteral"),sort("OctaLiteral"),sort("DeciNumeral"),sort("HexaNumeral"),sort("OctaNumeral")]),context-free-syntax([prod([sort("DeciLiteral")],sort("IntLiteral"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Deci\""))])))])),prod([sort("HexaLiteral")],sort("IntLiteral"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Hexa\""))])))])),prod([sort("OctaLiteral")],sort("IntLiteral"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Octa\""))])))]))])),lexical-syntax([prod([sort("DeciNumeral"),opt(char-class(simple-charclass(present(conc(short("l"),short("L"))))))],sort("DeciLiteral"),no-attrs),prod([sort("HexaNumeral"),opt(char-class(simple-charclass(present(conc(short("l"),short("L"))))))],sort("HexaLiteral"),no-attrs),prod([sort("OctaNumeral"),opt(char-class(simple-charclass(present(conc(short("l"),short("L"))))))],sort("OctaLiteral"),no-attrs),prod([lit("\"0\"")],sort("DeciNumeral"),no-attrs),prod([char-class(simple-charclass(present(range(short("1"),short("9"))))),iter-star(char-class(simple-charclass(present(range(short("0"),short("9"))))))],sort("DeciNumeral"),no-attrs),prod([char-class(simple-charclass(present(short("0")))),char-class(simple-charclass(present(conc(short("x"),short("X"))))),iter(char-class(simple-charclass(present(conc(range(short("0"),short("9")),conc(range(short("a"),short("f")),range(short("A"),short("F"))))))))],sort("HexaNumeral"),no-attrs),prod([char-class(simple-charclass(present(short("0")))),iter(char-class(simple-charclass(present(range(short("0"),short("7"))))))],sort("OctaNumeral"),no-attrs)])),lexical-restrictions([follow([sort("DeciNumeral")],single(char-class(simple-charclass(present(conc(range(short("0"),short("9")),conc(short("\\."),conc(short("f"),conc(short("F"),conc(short("d"),short("D"))))))))))),follow([sort("HexaNumeral")],single(char-class(simple-charclass(present(conc(range(short("0"),short("9")),conc(range(short("a"),short("f")),range(short("A"),short("F"))))))))),follow([sort("OctaNumeral")],single(char-class(simple-charclass(present(range(short("0"),short("7"))))))),follow([sort("DeciLiteral")],single(char-class(simple-charclass(present(conc(short("l"),short("L"))))))),follow([sort("HexaLiteral")],single(char-class(simple-charclass(present(conc(short("l"),short("L"))))))),follow([sort("OctaLiteral")],single(char-class(simple-charclass(present(conc(short("l"),short("L")))))))])))])