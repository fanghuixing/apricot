module(unparameterized("lexical/literals/StringLiterals"),[imports([module(unparameterized("lexical/literals/EscapeSequences")),module(unparameterized("lexical/UnicodeEscapes"))])],[exports(conc-grammars(conc-grammars(sorts([sort("StringLiteral"),sort("StringPart"),sort("StringChars"),sort("FooStringChars")]),syntax([prod([sort("StringLiteral")],cf(sort("StringLiteral")),no-attrs),prod([lit("\"\\\"\""),iter-star(sort("StringPart")),lit("\"\\\"\"")],sort("StringLiteral"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"String\""))])))])),prod([sort("StringChars")],sort("StringPart"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Chars\""))])))])),prod([sort("UnicodeEscape")],sort("StringPart"),no-attrs),prod([sort("EscapeSeq")],sort("StringPart"),no-attrs),prod([lex(sort("FooStringChars"))],sort("StringChars"),no-attrs),prod([iter(char-class(comp(simple-charclass(present(conc(short("\\\""),conc(short("\\\\"),conc(short("\\n"),numeric("\\13")))))))))],lex(sort("FooStringChars")),no-attrs)])),restrictions([follow([sort("StringChars")],single(char-class(comp(simple-charclass(present(conc(short("\\\""),conc(short("\\\\"),conc(short("\\n"),numeric("\\13"))))))))))])))])