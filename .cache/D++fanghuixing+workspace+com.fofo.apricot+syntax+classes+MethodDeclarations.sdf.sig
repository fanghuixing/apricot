module(unparameterized("classes/MethodDeclarations"),[imports([module(unparameterized("lexical/Identifiers")),module(unparameterized("lexical/Modifiers")),module(unparameterized("types/Main")),module(unparameterized("classes/FieldDeclarations")),module(unparameterized("interfaces/Annotations")),module(unparameterized("statements/Blocks"))])],[exports(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(sorts([sort("MethodDec"),sort("MethodDecHead"),sort("ResultType")]),context-free-syntax([prod([sort("MethodDecHead"),sort("MethodBody")],sort("MethodDec"),attrs([term(cons("MethodDec"))])),prod([iter-star(sort("Anno")),iter-star(sort("MethodMod")),sort("ResultType"),sort("Id"),lit("("),iter-star-sep(sort("FormalParam"),lit(",")),lit(")")],sort("MethodDecHead"),attrs([term(cons("MethodDecHead"))])),prod([sort("Type")],sort("ResultType"),attrs([])),prod([lit("void")],sort("ResultType"),attrs([term(cons("Void"))]))])),sorts([sort("FormalParam")])),context-free-syntax([prod([iter-star(sort("Anno")),sort("Type"),sort("VarDecId")],sort("FormalParam"),attrs([term(cons("Param"))]))])),context-free-syntax([])),sorts([sort("MethodMod")])),context-free-syntax([prod([sort("Public")],sort("MethodMod"),attrs([])),prod([sort("Private")],sort("MethodMod"),attrs([])),prod([sort("Native")],sort("MethodMod"),attrs([]))])),sorts([sort("ExceptionType")])),context-free-syntax([prod([sort("ClassType")],sort("ExceptionType"),attrs([]))])),sorts([sort("MethodBody")])),context-free-syntax([prod([sort("Block")],sort("MethodBody"),attrs([])),prod([lit(";")],sort("MethodBody"),attrs([term(cons("NoMethodBody"))]))])))])