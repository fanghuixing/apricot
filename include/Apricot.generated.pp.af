PP-Table([PP-Entry(Path1("PackageDec"),[Arg("1"),FBOX(KW,S("\"Package\"")),Arg("2"),FBOX(KW,S("\";\""))]),PP-Entry(Path("PackageDec",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path1("TypeImportDec"),[FBOX(KW,S("\"import\"")),Arg("1"),FBOX(KW,S("\";\""))]),PP-Entry(Path1("TypeImportOnDemandDec"),[FBOX(KW,S("\"import\"")),Arg("1"),FBOX(KW,S("\".\"")),FBOX(KW,S("\"*\"")),FBOX(KW,S("\";\""))]),PP-Entry(Path1("StaticImportDec"),[FBOX(KW,S("\"import\"")),FBOX(KW,S("\"static\"")),Arg("1"),FBOX(KW,S("\".\"")),Arg("2"),FBOX(KW,S("\";\""))]),PP-Entry(Path1("StaticImportOnDemandDec"),[FBOX(KW,S("\"import\"")),FBOX(KW,S("\"static\"")),Arg("1"),FBOX(KW,S("\".\"")),FBOX(KW,S("\"*\"")),FBOX(KW,S("\";\""))]),PP-Entry(Path1("Semicolon"),[FBOX(KW,S("\";\""))]),PP-Entry(Path1("CompilationUnit"),[Arg("1"),Arg("2"),Arg("3")]),PP-Entry(Path("CompilationUnit",[selector("1","opt")]),[Arg("1")]),PP-Entry(Path("CompilationUnit",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path("CompilationUnit",[selector("3","iter")]),[Arg("1")]),PP-Entry(Path1("PackageName"),[Arg("1")]),PP-Entry(Path("PackageName",[selector("1","iter-sep")]),[Arg("1"),FBOX(KW,S("\".\""))]),PP-Entry(Path1("AmbName"),[Arg("1")]),PP-Entry(Path1("AmbName"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2")]),PP-Entry(Path1("TypeName"),[Arg("1")]),PP-Entry(Path1("TypeName"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2")]),PP-Entry(Path1("ExprName"),[Arg("1")]),PP-Entry(Path1("ExprName"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2")]),PP-Entry(Path1("MethodName"),[Arg("1")]),PP-Entry(Path1("MethodName"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2")]),PP-Entry(Path1("PackageOrTypeName"),[Arg("1")]),PP-Entry(Path1("PackageOrTypeName"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2")]),PP-Entry(Path1("IntMath"),[FBOX(KW,S("\"Int\""))]),PP-Entry(Path1("RealMath"),[FBOX(KW,S("\"Real\""))]),PP-Entry(Path1("Boolean"),[FBOX(KW,S("\"boolean\""))]),PP-Entry(Path1("int"),[FBOX(KW,S("\"int\""))]),PP-Entry(Path1("real"),[FBOX(KW,S("\"real\""))]),PP-Entry(Path1("Invoke"),[Arg("1"),FBOX(KW,S("\"(\"")),Arg("2"),FBOX(KW,S("\")\""))]),PP-Entry(Path("Invoke",[selector("2","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("Method"),[Arg("1")]),PP-Entry(Path1("Method"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2")]),PP-Entry(Path1("SuperMethod"),[FBOX(KW,S("\"super\"")),FBOX(KW,S("\".\"")),Arg("1")]),PP-Entry(Path1("QSuperMethod"),[Arg("1"),FBOX(KW,S("\".\"")),FBOX(KW,S("\"super\"")),FBOX(KW,S("\".\"")),Arg("2")]),PP-Entry(Path1("GenericMethod"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2")]),PP-Entry(Path1("PostIncr"),[Arg("1"),FBOX(KW,S("\"++\""))]),PP-Entry(Path1("PostDecr"),[Arg("1"),FBOX(KW,S("\"--\""))]),PP-Entry(Path1("Null"),[FBOX(KW,S("\"null\""))]),PP-Entry(Path1("Null"),[FBOX(KW,S("\"Null\""))]),PP-Entry(Path1("Bool"),[Arg("1")]),PP-Entry(Path1("True"),[FBOX(KW,S("\"true\""))]),PP-Entry(Path1("False"),[FBOX(KW,S("\"false\""))]),PP-Entry(Path1("True"),[FBOX(KW,S("\"True\""))]),PP-Entry(Path1("False"),[FBOX(KW,S("\"False\""))]),PP-Entry(Path1("Float"),[Arg("1")]),PP-Entry(Path1("Float"),[Arg("1")]),PP-Entry(Path1("Deci"),[Arg("1")]),PP-Entry(Path1("Hexa"),[Arg("1")]),PP-Entry(Path1("Octa"),[Arg("1")]),PP-Entry(Path1("Lit"),[Arg("1")]),PP-Entry(Path1("Class"),[Arg("1"),FBOX(KW,S("\".\"")),FBOX(KW,S("\"class\""))]),PP-Entry(Path1("VoidClass"),[FBOX(KW,S("\"void\"")),FBOX(KW,S("\".\"")),FBOX(KW,S("\"class\""))]),PP-Entry(Path1("This"),[FBOX(KW,S("\"this\""))]),PP-Entry(Path1("QThis"),[Arg("1"),FBOX(KW,S("\".\"")),FBOX(KW,S("\"this\""))]),PP-Entry(Path1("ArrayAccess"),[Arg("1"),Arg("2")]),PP-Entry(Path1("Assign"),[Arg("1"),FBOX(KW,S("\"=\"")),Arg("2")]),PP-Entry(Path1("AssignMul"),[Arg("1"),FBOX(KW,S("\"*=\"")),Arg("2")]),PP-Entry(Path1("AssignDiv"),[Arg("1"),FBOX(KW,S("\"/=\"")),Arg("2")]),PP-Entry(Path1("AssignRemain"),[Arg("1"),FBOX(KW,S("\"%=\"")),Arg("2")]),PP-Entry(Path1("AssignPlus"),[Arg("1"),FBOX(KW,S("\"+=\"")),Arg("2")]),PP-Entry(Path1("AssignMinus"),[Arg("1"),FBOX(KW,S("\"-=\"")),Arg("2")]),PP-Entry(Path1("InstanceOf"),[Arg("1"),FBOX(KW,S("\"instanceof\"")),Arg("2")]),PP-Entry(Path1("Mul"),[Arg("1"),FBOX(KW,S("\"*\"")),Arg("2")]),PP-Entry(Path1("Div"),[Arg("1"),FBOX(KW,S("\"/\"")),Arg("2")]),PP-Entry(Path1("Remain"),[Arg("1"),FBOX(KW,S("\"%\"")),Arg("2")]),PP-Entry(Path1("Plus"),[Arg("1"),FBOX(KW,S("\"+\"")),Arg("2")]),PP-Entry(Path1("Minus"),[Arg("1"),FBOX(KW,S("\"-\"")),Arg("2")]),PP-Entry(Path1("Lt"),[Arg("1"),FBOX(KW,S("\"<\"")),Arg("2")]),PP-Entry(Path1("Gt"),[Arg("1"),FBOX(KW,S("\">\"")),Arg("2")]),PP-Entry(Path1("LtEq"),[Arg("1"),FBOX(KW,S("\"<=\"")),Arg("2")]),PP-Entry(Path1("GtEq"),[Arg("1"),FBOX(KW,S("\">=\"")),Arg("2")]),PP-Entry(Path1("Eq"),[Arg("1"),FBOX(KW,S("\"==\"")),Arg("2")]),PP-Entry(Path1("NotEq"),[Arg("1"),FBOX(KW,S("\"!=\"")),Arg("2")]),PP-Entry(Path1("Synchronous"),[Arg("1"),FBOX(KW,S("\"||\"")),Arg("2")]),PP-Entry(Path1("Asynchronous"),[Arg("1"),FBOX(KW,S("\"~\"")),Arg("2")]),PP-Entry(Path1("LogicIn"),[Arg("1"),FBOX(KW,S("\"in\"")),Arg("2")]),PP-Entry(Path1("LogicAnd"),[Arg("1"),FBOX(KW,S("\"and\"")),Arg("2")]),PP-Entry(Path1("LogicOr"),[Arg("1"),FBOX(KW,S("\"or\"")),Arg("2")]),PP-Entry(Path1("LogicXOR"),[Arg("1"),FBOX(KW,S("\"xor\"")),Arg("2")]),PP-Entry(Path1("Cond"),[Arg("1"),Arg("2"),Arg("3")]),PP-Entry(Path1("Plus"),[FBOX(KW,S("\"+\"")),Arg("1")]),PP-Entry(Path1("Minus"),[FBOX(KW,S("\"-\"")),Arg("1")]),PP-Entry(Path1("PreIncr"),[FBOX(KW,S("\"++\"")),Arg("1")]),PP-Entry(Path1("PreDecr"),[FBOX(KW,S("\"--\"")),Arg("1")]),PP-Entry(Path1("Not"),[FBOX(KW,S("\"!\"")),Arg("1")]),PP-Entry(Path1("CastPrim"),[FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),Arg("2")]),PP-Entry(Path1("CastRef"),[FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),Arg("2")]),PP-Entry(Path1("Field"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2")]),PP-Entry(Path1("SuperField"),[FBOX(KW,S("\"super\"")),FBOX(KW,S("\".\"")),Arg("1")]),PP-Entry(Path1("QSuperField"),[Arg("1"),FBOX(KW,S("\".\"")),FBOX(KW,S("\"super\"")),FBOX(KW,S("\".\"")),Arg("2")]),PP-Entry(Path1("NewArray"),[FBOX(KW,S("\"new\"")),Arg("1"),Arg("2"),Arg("3")]),PP-Entry(Path("NewArray",[selector("2","iter")]),[Arg("1")]),PP-Entry(Path("NewArray",[selector("3","iter-star")]),[Arg("1")]),PP-Entry(Path1("NewArray"),[FBOX(KW,S("\"new\"")),Arg("1"),Arg("2"),Arg("3")]),PP-Entry(Path("NewArray",[selector("2","iter")]),[Arg("1")]),PP-Entry(Path1("Dim"),[FBOX(KW,S("\"[\"")),Arg("1"),FBOX(KW,S("\"]\""))]),PP-Entry(Path1("Dim"),[FBOX(KW,S("\"[\"")),FBOX(KW,S("\"]\""))]),PP-Entry(Path1("AbstractInvariant"),[FBOX(KW,S("\"Invariant\"")),FBOX(KW,S("\"{\"")),FBOX(KW,S("\"}\"")),FBOX(KW,S("\";\""))]),PP-Entry(Path1("ClockConstraint"),[FBOX(KW,S("\"Constraint\"")),FBOX(KW,S("\"clock\"")),FBOX(KW,S("\";\""))]),PP-Entry(Path1("AbstractMethodDec"),[Arg("1"),Arg("2"),Arg("3"),Arg("4"),FBOX(KW,S("\"(\"")),Arg("5"),FBOX(KW,S("\")\"")),FBOX(KW,S("\";\""))]),PP-Entry(Path("AbstractMethodDec",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("AbstractMethodDec",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path("AbstractMethodDec",[selector("5","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("AbstractMethodDec"),[Arg("1"),Arg("2"),Arg("3"),Arg("4"),FBOX(KW,S("\"(\"")),Arg("5"),FBOX(KW,S("\")\"")),FBOX(KW,S("\"{\"")),Arg("6"),FBOX(KW,S("\"}\"")),FBOX(KW,S("\";\""))]),PP-Entry(Path("AbstractMethodDec",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("AbstractMethodDec",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path("AbstractMethodDec",[selector("5","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("DeprAbstractMethodDec"),[Arg("1"),Arg("2"),Arg("3"),Arg("4"),FBOX(KW,S("\"(\"")),Arg("5"),FBOX(KW,S("\")\"")),Arg("6"),FBOX(KW,S("\";\""))]),PP-Entry(Path("DeprAbstractMethodDec",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("DeprAbstractMethodDec",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path("DeprAbstractMethodDec",[selector("5","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path("DeprAbstractMethodDec",[selector("6","iter")]),[Arg("1")]),PP-Entry(Path1("AmGeOne"),[FBOX(KW,S("\"1..*\""))]),PP-Entry(Path1("AmOneOrZero"),[FBOX(KW,S("\"0..1\""))]),PP-Entry(Path1("Requires"),[FBOX(KW,S("\"Requires\"")),Arg("1"),FBOX(KW,S("\"[\"")),Arg("2"),FBOX(KW,S("\"]\"")),FBOX(KW,S("\":\"")),Arg("3"),FBOX(KW,S("\";\""))]),PP-Entry(Path1("Asynactions"),[FBOX(KW,S("\"(\"")),FBOX(KW,S("\"?\"")),FBOX(KW,S("\"|\"")),FBOX(KW,S("\"!\"")),FBOX(KW,S("\")\""))]),PP-Entry(Path1("SwitchTys"),[FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\",\"")),Arg("2"),FBOX(KW,S("\",\"")),Arg("3"),FBOX(KW,S("\")\""))]),PP-Entry(Path("SwitchTys",[selector("1","iter-sep")]),[Arg("1"),FBOX(KW,S("\"|\""))]),PP-Entry(Path("SwitchTys",[selector("2","iter-sep")]),[Arg("1"),FBOX(KW,S("\"|\""))]),PP-Entry(Path("SwitchTys",[selector("3","iter-sep")]),[Arg("1"),FBOX(KW,S("\"|\""))]),PP-Entry(Path1("AbstractCond"),[FBOX(KW,S("\"Condition\"")),FBOX(KW,S("\"{\"")),FBOX(KW,S("\"}\"")),FBOX(KW,S("\";\""))]),PP-Entry(Path1("RequiresComp"),[FBOX(KW,S("\"Requires\"")),Arg("1"),FBOX(KW,S("\"[\"")),Arg("2"),FBOX(KW,S("\"]\"")),Arg("3"),FBOX(KW,S("\"[\"")),Arg("4"),FBOX(KW,S("\"]\"")),FBOX(KW,S("\":\"")),Arg("5"),FBOX(KW,S("\"{\"")),Arg("6"),FBOX(KW,S("\"}\"")),FBOX(KW,S("\";\""))]),PP-Entry(Path1("AnnoDec"),[Arg("1"),FBOX(KW,S("\"{\"")),Arg("2"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("AnnoDec",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path1("AnnoDecHead"),[Arg("1"),FBOX(KW,S("\"@\"")),FBOX(KW,S("\"interface\"")),Arg("2")]),PP-Entry(Path("AnnoDecHead",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path1("AnnoDecHead"),[Arg("1"),FBOX(KW,S("\"@\"")),FBOX(KW,S("\"interface\"")),Arg("2")]),PP-Entry(Path("AnnoDecHead",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path1("Semicolon"),[FBOX(KW,S("\";\""))]),PP-Entry(Path1("DefaultVal"),[FBOX(KW,S("\"default\"")),Arg("1")]),PP-Entry(Path1("ConstantDec"),[Arg("1"),Arg("2"),Arg("3"),Arg("4"),FBOX(KW,S("\";\""))]),PP-Entry(Path("ConstantDec",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("ConstantDec",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path("ConstantDec",[selector("4","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("InterfaceDec"),[Arg("1"),FBOX(KW,S("\"{\"")),Arg("2"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("InterfaceDec",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path1("InterfaceDecHead"),[Arg("1"),Arg("2"),FBOX(KW,S("\"Interface\"")),Arg("3"),Arg("4")]),PP-Entry(Path("InterfaceDecHead",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("InterfaceDecHead",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path("InterfaceDecHead",[selector("3","opt")]),[Arg("1")]),PP-Entry(Path1("ExtendsInterfaces"),[Arg("1")]),PP-Entry(Path("ExtendsInterfaces",[selector("1","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("Semicolon"),[FBOX(KW,S("\";\""))]),PP-Entry(Path1("ConstrDec"),[Arg("1"),Arg("2")]),PP-Entry(Path1("ConstrDecHead"),[Arg("1"),Arg("2"),Arg("3"),FBOX(KW,S("\"(\"")),Arg("4"),FBOX(KW,S("\")\""))]),PP-Entry(Path("ConstrDecHead",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("ConstrDecHead",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path("ConstrDecHead",[selector("4","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("ConstrBody"),[FBOX(KW,S("\"{\"")),Arg("1"),Arg("2"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("ConstrBody",[selector("1","opt")]),[Arg("1")]),PP-Entry(Path("ConstrBody",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path1("AltConstrInv"),[FBOX(KW,S("\"this\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),FBOX(KW,S("\";\""))]),PP-Entry(Path("AltConstrInv",[selector("1","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("SuperConstrInv"),[FBOX(KW,S("\"super\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),FBOX(KW,S("\";\""))]),PP-Entry(Path("SuperConstrInv",[selector("1","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("QSuperConstrInv"),[Arg("1"),FBOX(KW,S("\".\"")),FBOX(KW,S("\"super\"")),FBOX(KW,S("\"(\"")),Arg("2"),FBOX(KW,S("\")\"")),FBOX(KW,S("\";\""))]),PP-Entry(Path("QSuperConstrInv",[selector("2","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("InstanceInit"),[Arg("1")]),PP-Entry(Path1("Empty"),[FBOX(KW,S("\";\""))]),PP-Entry(Path1("Labeled"),[Arg("1"),FBOX(KW,S("\":\"")),Arg("2")]),PP-Entry(Path1("ExprStm"),[Arg("1"),FBOX(KW,S("\";\""))]),PP-Entry(Path1("If"),[FBOX(KW,S("\"if\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),Arg("2")]),PP-Entry(Path1("If"),[FBOX(KW,S("\"if\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),Arg("2"),FBOX(KW,S("\"else\"")),Arg("3")]),PP-Entry(Path1("AssertStm"),[FBOX(KW,S("\"assert\"")),Arg("1"),FBOX(KW,S("\";\""))]),PP-Entry(Path1("AssertStm"),[FBOX(KW,S("\"assert\"")),Arg("1"),FBOX(KW,S("\":\"")),Arg("2"),FBOX(KW,S("\";\""))]),PP-Entry(Path1("Switch"),[FBOX(KW,S("\"switch\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),Arg("2")]),PP-Entry(Path1("SwitchBlock"),[FBOX(KW,S("\"{\"")),Arg("1"),Arg("2"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("SwitchBlock",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("SwitchBlock",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path1("SwitchGroup"),[Arg("1"),Arg("2")]),PP-Entry(Path("SwitchGroup",[selector("1","iter")]),[Arg("1")]),PP-Entry(Path("SwitchGroup",[selector("2","iter")]),[Arg("1")]),PP-Entry(Path1("Case"),[FBOX(KW,S("\"case\"")),Arg("1"),FBOX(KW,S("\":\""))]),PP-Entry(Path1("Default"),[FBOX(KW,S("\"default\"")),FBOX(KW,S("\":\""))]),PP-Entry(Path1("While"),[FBOX(KW,S("\"while\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),Arg("2")]),PP-Entry(Path1("DoWhile"),[FBOX(KW,S("\"do\"")),Arg("1"),FBOX(KW,S("\"while\"")),FBOX(KW,S("\"(\"")),Arg("2"),FBOX(KW,S("\")\"")),FBOX(KW,S("\";\""))]),PP-Entry(Path1("For"),[FBOX(KW,S("\"for\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\";\"")),Arg("2"),FBOX(KW,S("\";\"")),Arg("3"),FBOX(KW,S("\")\"")),Arg("4")]),PP-Entry(Path("For",[selector("2","opt")]),[Arg("1")]),PP-Entry(Path("For",[selector("3","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("For"),[FBOX(KW,S("\"for\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\";\"")),Arg("2"),FBOX(KW,S("\";\"")),Arg("3"),FBOX(KW,S("\")\"")),Arg("4")]),PP-Entry(Path("For",[selector("1","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path("For",[selector("2","opt")]),[Arg("1")]),PP-Entry(Path("For",[selector("3","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("ForEach"),[FBOX(KW,S("\"for\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\":\"")),Arg("2"),FBOX(KW,S("\")\"")),Arg("3")]),PP-Entry(Path1("Break"),[FBOX(KW,S("\"break\"")),Arg("1"),FBOX(KW,S("\";\""))]),PP-Entry(Path("Break",[selector("1","opt")]),[Arg("1")]),PP-Entry(Path1("Continue"),[FBOX(KW,S("\"continue\"")),Arg("1"),FBOX(KW,S("\";\""))]),PP-Entry(Path("Continue",[selector("1","opt")]),[Arg("1")]),PP-Entry(Path1("Return"),[FBOX(KW,S("\"return\"")),Arg("1"),FBOX(KW,S("\";\""))]),PP-Entry(Path("Return",[selector("1","opt")]),[Arg("1")]),PP-Entry(Path1("Throw"),[FBOX(KW,S("\"throw\"")),Arg("1"),FBOX(KW,S("\";\""))]),PP-Entry(Path1("Synchronized"),[FBOX(KW,S("\"synchronized\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),Arg("2")]),PP-Entry(Path1("Try"),[FBOX(KW,S("\"try\"")),Arg("1"),Arg("2")]),PP-Entry(Path("Try",[selector("2","iter")]),[Arg("1")]),PP-Entry(Path1("Try"),[FBOX(KW,S("\"try\"")),Arg("1"),Arg("2"),FBOX(KW,S("\"finally\"")),Arg("3")]),PP-Entry(Path("Try",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path1("Catch"),[FBOX(KW,S("\"catch\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),Arg("2")]),PP-Entry(Path1("LocalVarDecStm"),[Arg("1"),FBOX(KW,S("\";\""))]),PP-Entry(Path1("LocalVarDec"),[Arg("1"),Arg("2"),Arg("3")]),PP-Entry(Path("LocalVarDec",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("LocalVarDec",[selector("3","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("Block"),V([],[[V([SOpt(VS,"2")],[FBOX(KW,S("\"{\"")),Arg("1")])],FBOX(KW,S("\"}\""))])),PP-Entry(Path("Block",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path1("ClassDecStm"),[Arg("1")]),PP-Entry(Path1("MethodDec"),[Arg("1"),Arg("2")]),PP-Entry(Path1("MethodDecHead"),[Arg("1"),Arg("2"),Arg("3"),Arg("4"),FBOX(KW,S("\"(\"")),Arg("5"),FBOX(KW,S("\")\""))]),PP-Entry(Path("MethodDecHead",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("MethodDecHead",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path("MethodDecHead",[selector("5","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("Void"),[FBOX(KW,S("\"Void\""))]),PP-Entry(Path1("Param"),[Arg("1"),Arg("2"),Arg("3")]),PP-Entry(Path("Param",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path1("NoMethodBody"),[FBOX(KW,S("\";\""))]),PP-Entry(Path1("ArrayInit"),[FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("ArrayInit",[selector("1","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("ArrayInit"),[FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\",\"")),FBOX(KW,S("\"}\""))]),PP-Entry(Path("ArrayInit",[selector("1","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("Anno"),[FBOX(KW,S("\"@\"")),Arg("1"),FBOX(KW,S("\"(\"")),Arg("2"),FBOX(KW,S("\")\""))]),PP-Entry(Path("Anno",[selector("2","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("SingleElemAnno"),[FBOX(KW,S("\"@\"")),Arg("1"),FBOX(KW,S("\"(\"")),Arg("2"),FBOX(KW,S("\")\""))]),PP-Entry(Path1("MarkerAnno"),[FBOX(KW,S("\"@\"")),Arg("1")]),PP-Entry(Path1("ElemValPair"),[Arg("1"),FBOX(KW,S("\"=\"")),Arg("2")]),PP-Entry(Path1("ElemValArrayInit"),[FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("ElemValArrayInit",[selector("1","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("ElemValArrayInit"),[FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\",\"")),FBOX(KW,S("\"}\""))]),PP-Entry(Path("ElemValArrayInit",[selector("1","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("FieldDec"),[Arg("1"),Arg("2"),Arg("3"),Arg("4"),FBOX(KW,S("\";\""))]),PP-Entry(Path("FieldDec",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("FieldDec",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path("FieldDec",[selector("4","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("VarDec"),[Arg("1")]),PP-Entry(Path1("VarDec"),[Arg("1"),FBOX(KW,S("\"=\"")),Arg("2")]),PP-Entry(Path1("ArrayVarDecId"),[Arg("1"),Arg("2")]),PP-Entry(Path("ArrayVarDecId",[selector("2","iter")]),[Arg("1")]),PP-Entry(Path1("Dim"),[FBOX(KW,S("\"[\"")),FBOX(KW,S("\"]\""))]),PP-Entry(Path1("ClassOrInterfaceType"),[Arg("1")]),PP-Entry(Path1("ClassType"),[Arg("1")]),PP-Entry(Path1("InterfaceType"),[Arg("1")]),PP-Entry(Path1("Member"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2")]),PP-Entry(Path1("ArrayType"),[Arg("1"),FBOX(KW,S("\"[\"")),FBOX(KW,S("\"]\""))]),PP-Entry(Path1("Public"),[FBOX(KW,S("\"Public\""))]),PP-Entry(Path1("Private"),[FBOX(KW,S("\"Private\""))]),PP-Entry(Path1("Native"),[FBOX(KW,S("\"Native\""))]),PP-Entry(Path1("Constant"),[FBOX(KW,S("\"Constant\""))]),PP-Entry(Path1("Id"),[Arg("1")]),PP-Entry(Path1("ClassDec"),[Arg("1"),Arg("2")]),PP-Entry(Path1("ClassBody"),V([],[[V([SOpt(VS,"2")],[FBOX(KW,S("\"{\"")),Arg("1")])],FBOX(KW,S("\"}\""))])),PP-Entry(Path("ClassBody",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path1("ClassDecHead"),[Arg("1"),Arg("2"),Arg("3"),Arg("4"),FBOX(KW,S("\"Class\"")),Arg("5")]),PP-Entry(Path("ClassDecHead",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path("ClassDecHead",[selector("2","iter-star")]),[Arg("1")]),PP-Entry(Path("ClassDecHead",[selector("3","opt")]),[Arg("1")]),PP-Entry(Path("ClassDecHead",[selector("4","opt")]),[Arg("1")]),PP-Entry(Path1("SuperDec"),[Arg("1")]),PP-Entry(Path1("ImplementsDec"),[Arg("1")]),PP-Entry(Path("ImplementsDec",[selector("1","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("Semicolon"),[FBOX(KW,S("\";\""))]),PP-Entry(Path1("NewInstance"),[FBOX(KW,S("\"new\"")),Arg("1"),FBOX(KW,S("\"(\"")),Arg("2"),FBOX(KW,S("\")\"")),Arg("3")]),PP-Entry(Path("NewInstance",[selector("2","iter-star-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path("NewInstance",[selector("3","opt")]),[Arg("1")]),PP-Entry(Path1("StartApricot"),[Arg("1")])])