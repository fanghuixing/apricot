
regular tree grammar
  start Start
  productions
    ListStarOfTypeDec0            -> ListPlusOfTypeDec0
    ListStarOfTypeDec0            -> <nil>()
    ListStarOfTypeDec0            -> <conc>(ListStarOfTypeDec0,ListStarOfTypeDec0)
    ListPlusOfTypeDec0            -> <conc>(ListStarOfTypeDec0,ListPlusOfTypeDec0)
    ListPlusOfTypeDec0            -> <conc>(ListPlusOfTypeDec0,ListStarOfTypeDec0)
    ListPlusOfTypeDec0            -> <conc>(ListPlusOfTypeDec0,ListPlusOfTypeDec0)
    ListPlusOfTypeDec0            -> <cons>(TypeDec,ListStarOfTypeDec0)
    ListStarOfImportDec0          -> ListPlusOfImportDec0
    ListStarOfImportDec0          -> <nil>()
    ListStarOfImportDec0          -> <conc>(ListStarOfImportDec0,ListStarOfImportDec0)
    ListPlusOfImportDec0          -> <conc>(ListStarOfImportDec0,ListPlusOfImportDec0)
    ListPlusOfImportDec0          -> <conc>(ListPlusOfImportDec0,ListStarOfImportDec0)
    ListPlusOfImportDec0          -> <conc>(ListPlusOfImportDec0,ListPlusOfImportDec0)
    ListPlusOfImportDec0          -> <cons>(ImportDec,ListStarOfImportDec0)
    OptPackageDec0                -> <some>(PackageDec)
    OptPackageDec0                -> <none>()
    ListStarOfAnno0               -> ListPlusOfAnno0
    ListStarOfAnno0               -> <nil>()
    ListStarOfAnno0               -> <conc>(ListStarOfAnno0,ListStarOfAnno0)
    ListPlusOfAnno0               -> <conc>(ListStarOfAnno0,ListPlusOfAnno0)
    ListPlusOfAnno0               -> <conc>(ListPlusOfAnno0,ListStarOfAnno0)
    ListPlusOfAnno0               -> <conc>(ListPlusOfAnno0,ListPlusOfAnno0)
    ListPlusOfAnno0               -> <cons>(Anno,ListStarOfAnno0)
    ListStarOfExpr0               -> ListPlusOfExpr0
    ListStarOfExpr0               -> <nil>()
    ListStarOfExpr0               -> <conc>(ListStarOfExpr0,ListStarOfExpr0)
    ListPlusOfExpr0               -> <conc>(ListStarOfExpr0,ListPlusOfExpr0)
    ListPlusOfExpr0               -> <conc>(ListPlusOfExpr0,ListStarOfExpr0)
    ListPlusOfExpr0               -> <conc>(ListPlusOfExpr0,ListPlusOfExpr0)
    ListPlusOfExpr0               -> <cons>(Expr,ListStarOfExpr0)
    ListStarOfCharClass0          -> ListPlusOfCharClass0
    ListStarOfCharClass0          -> <nil>()
    ListStarOfCharClass0          -> <conc>(ListStarOfCharClass0,ListStarOfCharClass0)
    ListPlusOfCharClass0          -> <conc>(ListStarOfCharClass0,ListPlusOfCharClass0)
    ListPlusOfCharClass0          -> <conc>(ListPlusOfCharClass0,ListStarOfCharClass0)
    ListPlusOfCharClass0          -> <conc>(ListPlusOfCharClass0,ListPlusOfCharClass0)
    ListPlusOfCharClass0          -> <cons>(<int>,ListStarOfCharClass0)
    ListStarOfStringPart0         -> ListPlusOfStringPart0
    ListStarOfStringPart0         -> <nil>()
    ListStarOfStringPart0         -> <conc>(ListStarOfStringPart0,ListStarOfStringPart0)
    ListPlusOfStringPart0         -> <conc>(ListStarOfStringPart0,ListPlusOfStringPart0)
    ListPlusOfStringPart0         -> <conc>(ListPlusOfStringPart0,ListStarOfStringPart0)
    ListPlusOfStringPart0         -> <conc>(ListPlusOfStringPart0,ListPlusOfStringPart0)
    ListPlusOfStringPart0         -> <cons>(StringPart,ListStarOfStringPart0)
    ListStarOfCharClass1          -> ListPlusOfCharClass1
    ListStarOfCharClass1          -> <nil>()
    ListStarOfCharClass1          -> <conc>(ListStarOfCharClass1,ListStarOfCharClass1)
    ListPlusOfCharClass1          -> <conc>(ListStarOfCharClass1,ListPlusOfCharClass1)
    ListPlusOfCharClass1          -> <conc>(ListPlusOfCharClass1,ListStarOfCharClass1)
    ListPlusOfCharClass1          -> <conc>(ListPlusOfCharClass1,ListPlusOfCharClass1)
    ListPlusOfCharClass1          -> <cons>(<int>,ListStarOfCharClass1)
    OptDeciFloatExponentPart0     -> <string>
    ListStarOfDim0                -> ListPlusOfDim0
    ListStarOfDim0                -> <nil>()
    ListStarOfDim0                -> <conc>(ListStarOfDim0,ListStarOfDim0)
    ListPlusOfDim0                -> <conc>(ListStarOfDim0,ListPlusOfDim0)
    ListPlusOfDim0                -> <conc>(ListPlusOfDim0,ListStarOfDim0)
    ListPlusOfDim0                -> <conc>(ListPlusOfDim0,ListPlusOfDim0)
    ListPlusOfDim0                -> <cons>(Dim,ListStarOfDim0)
    ListStarOfDimExpr0            -> ListPlusOfDimExpr0
    ListStarOfDimExpr0            -> <nil>()
    ListStarOfDimExpr0            -> <conc>(ListStarOfDimExpr0,ListStarOfDimExpr0)
    ListPlusOfDimExpr0            -> <conc>(ListStarOfDimExpr0,ListPlusOfDimExpr0)
    ListPlusOfDimExpr0            -> <conc>(ListPlusOfDimExpr0,ListStarOfDimExpr0)
    ListPlusOfDimExpr0            -> <conc>(ListPlusOfDimExpr0,ListPlusOfDimExpr0)
    ListPlusOfDimExpr0            -> <cons>(DimExpr,ListStarOfDimExpr0)
    OptClassBody0                 -> <some>(ClassBody)
    OptClassBody0                 -> <none>()
    ListStarOfInterfaceType0      -> ListPlusOfInterfaceType0
    ListStarOfInterfaceType0      -> <nil>()
    ListStarOfInterfaceType0      -> <conc>(ListStarOfInterfaceType0,ListStarOfInterfaceType0)
    ListPlusOfInterfaceType0      -> <conc>(ListStarOfInterfaceType0,ListPlusOfInterfaceType0)
    ListPlusOfInterfaceType0      -> <conc>(ListPlusOfInterfaceType0,ListStarOfInterfaceType0)
    ListPlusOfInterfaceType0      -> <conc>(ListPlusOfInterfaceType0,ListPlusOfInterfaceType0)
    ListPlusOfInterfaceType0      -> <cons>(InterfaceType,ListStarOfInterfaceType0)
    OptInterfaces27               -> <some>(Interfaces)
    OptInterfaces27               -> <none>()
    OptSuper0                     -> <some>(Super)
    OptSuper0                     -> <none>()
    ListStarOfClassMod0           -> ListPlusOfClassMod0
    ListStarOfClassMod0           -> <nil>()
    ListStarOfClassMod0           -> <conc>(ListStarOfClassMod0,ListStarOfClassMod0)
    ListPlusOfClassMod0           -> <conc>(ListStarOfClassMod0,ListPlusOfClassMod0)
    ListPlusOfClassMod0           -> <conc>(ListPlusOfClassMod0,ListStarOfClassMod0)
    ListPlusOfClassMod0           -> <conc>(ListPlusOfClassMod0,ListPlusOfClassMod0)
    ListPlusOfClassMod0           -> <cons>(ClassMod,ListStarOfClassMod0)
    ListStarOfClassBodyDec0       -> ListPlusOfClassBodyDec0
    ListStarOfClassBodyDec0       -> <nil>()
    ListStarOfClassBodyDec0       -> <conc>(ListStarOfClassBodyDec0,ListStarOfClassBodyDec0)
    ListPlusOfClassBodyDec0       -> <conc>(ListStarOfClassBodyDec0,ListPlusOfClassBodyDec0)
    ListPlusOfClassBodyDec0       -> <conc>(ListPlusOfClassBodyDec0,ListStarOfClassBodyDec0)
    ListPlusOfClassBodyDec0       -> <conc>(ListPlusOfClassBodyDec0,ListPlusOfClassBodyDec0)
    ListPlusOfClassBodyDec0       -> <cons>(ClassBodyDec,ListStarOfClassBodyDec0)
    ListStarOfInterfaceMod0       -> ListPlusOfInterfaceMod0
    ListStarOfInterfaceMod0       -> <nil>()
    ListStarOfInterfaceMod0       -> <conc>(ListStarOfInterfaceMod0,ListStarOfInterfaceMod0)
    ListPlusOfInterfaceMod0       -> <conc>(ListStarOfInterfaceMod0,ListPlusOfInterfaceMod0)
    ListPlusOfInterfaceMod0       -> <conc>(ListPlusOfInterfaceMod0,ListStarOfInterfaceMod0)
    ListPlusOfInterfaceMod0       -> <conc>(ListPlusOfInterfaceMod0,ListPlusOfInterfaceMod0)
    ListPlusOfInterfaceMod0       -> <cons>(InterfaceMod,ListStarOfInterfaceMod0)
    OptExtendsInterfaces5         -> <some>(ExtendsInterfaces)
    OptExtendsInterfaces5         -> <none>()
    ListStarOfInterfaceMemberDec0 -> ListPlusOfInterfaceMemberDec0
    ListStarOfInterfaceMemberDec0 -> <nil>()
    ListStarOfInterfaceMemberDec0 -> <conc>(ListStarOfInterfaceMemberDec0,ListStarOfInterfaceMemberDec0)
    ListPlusOfInterfaceMemberDec0 -> <conc>(ListStarOfInterfaceMemberDec0,ListPlusOfInterfaceMemberDec0)
    ListPlusOfInterfaceMemberDec0 -> <conc>(ListPlusOfInterfaceMemberDec0,ListStarOfInterfaceMemberDec0)
    ListPlusOfInterfaceMemberDec0 -> <conc>(ListPlusOfInterfaceMemberDec0,ListPlusOfInterfaceMemberDec0)
    ListPlusOfInterfaceMemberDec0 -> <cons>(InterfaceMemberDec,ListStarOfInterfaceMemberDec0)
    ListStarOfAnnoElemDec0        -> ListPlusOfAnnoElemDec0
    ListStarOfAnnoElemDec0        -> <nil>()
    ListStarOfAnnoElemDec0        -> <conc>(ListStarOfAnnoElemDec0,ListStarOfAnnoElemDec0)
    ListPlusOfAnnoElemDec0        -> <conc>(ListStarOfAnnoElemDec0,ListPlusOfAnnoElemDec0)
    ListPlusOfAnnoElemDec0        -> <conc>(ListPlusOfAnnoElemDec0,ListStarOfAnnoElemDec0)
    ListPlusOfAnnoElemDec0        -> <conc>(ListPlusOfAnnoElemDec0,ListPlusOfAnnoElemDec0)
    ListPlusOfAnnoElemDec0        -> <cons>(AnnoElemDec,ListStarOfAnnoElemDec0)
    ListStarOfVarDec0             -> ListPlusOfVarDec0
    ListStarOfVarDec0             -> <nil>()
    ListStarOfVarDec0             -> <conc>(ListStarOfVarDec0,ListStarOfVarDec0)
    ListPlusOfVarDec0             -> <conc>(ListStarOfVarDec0,ListPlusOfVarDec0)
    ListPlusOfVarDec0             -> <conc>(ListPlusOfVarDec0,ListStarOfVarDec0)
    ListPlusOfVarDec0             -> <conc>(ListPlusOfVarDec0,ListPlusOfVarDec0)
    ListPlusOfVarDec0             -> <cons>(VarDec,ListStarOfVarDec0)
    ListStarOfConstantMod0        -> ListPlusOfConstantMod0
    ListStarOfConstantMod0        -> <nil>()
    ListStarOfConstantMod0        -> <conc>(ListStarOfConstantMod0,ListStarOfConstantMod0)
    ListPlusOfConstantMod0        -> <conc>(ListStarOfConstantMod0,ListPlusOfConstantMod0)
    ListPlusOfConstantMod0        -> <conc>(ListPlusOfConstantMod0,ListStarOfConstantMod0)
    ListPlusOfConstantMod0        -> <conc>(ListPlusOfConstantMod0,ListPlusOfConstantMod0)
    ListPlusOfConstantMod0        -> <cons>(ConstantMod,ListStarOfConstantMod0)
    OptConstrInv0                 -> <some>(ConstrInv)
    OptConstrInv0                 -> <none>()
    ListStarOfFormalParam0        -> ListPlusOfFormalParam0
    ListStarOfFormalParam0        -> <nil>()
    ListStarOfFormalParam0        -> <conc>(ListStarOfFormalParam0,ListStarOfFormalParam0)
    ListPlusOfFormalParam0        -> <conc>(ListStarOfFormalParam0,ListPlusOfFormalParam0)
    ListPlusOfFormalParam0        -> <conc>(ListPlusOfFormalParam0,ListStarOfFormalParam0)
    ListPlusOfFormalParam0        -> <conc>(ListPlusOfFormalParam0,ListPlusOfFormalParam0)
    ListPlusOfFormalParam0        -> <cons>(FormalParam,ListStarOfFormalParam0)
    ListStarOfConstrMod0          -> ListPlusOfConstrMod0
    ListStarOfConstrMod0          -> <nil>()
    ListStarOfConstrMod0          -> <conc>(ListStarOfConstrMod0,ListStarOfConstrMod0)
    ListPlusOfConstrMod0          -> <conc>(ListStarOfConstrMod0,ListPlusOfConstrMod0)
    ListPlusOfConstrMod0          -> <conc>(ListPlusOfConstrMod0,ListStarOfConstrMod0)
    ListPlusOfConstrMod0          -> <conc>(ListPlusOfConstrMod0,ListPlusOfConstrMod0)
    ListPlusOfConstrMod0          -> <cons>(ConstrMod,ListStarOfConstrMod0)
    ListStarOfMethodMod0          -> ListPlusOfMethodMod0
    ListStarOfMethodMod0          -> <nil>()
    ListStarOfMethodMod0          -> <conc>(ListStarOfMethodMod0,ListStarOfMethodMod0)
    ListPlusOfMethodMod0          -> <conc>(ListStarOfMethodMod0,ListPlusOfMethodMod0)
    ListPlusOfMethodMod0          -> <conc>(ListPlusOfMethodMod0,ListStarOfMethodMod0)
    ListPlusOfMethodMod0          -> <conc>(ListPlusOfMethodMod0,ListPlusOfMethodMod0)
    ListPlusOfMethodMod0          -> <cons>(MethodMod,ListStarOfMethodMod0)
    ListStarOfCatchClause0        -> ListPlusOfCatchClause0
    ListStarOfCatchClause0        -> <nil>()
    ListStarOfCatchClause0        -> <conc>(ListStarOfCatchClause0,ListStarOfCatchClause0)
    ListPlusOfCatchClause0        -> <conc>(ListStarOfCatchClause0,ListPlusOfCatchClause0)
    ListPlusOfCatchClause0        -> <conc>(ListPlusOfCatchClause0,ListStarOfCatchClause0)
    ListPlusOfCatchClause0        -> <conc>(ListPlusOfCatchClause0,ListPlusOfCatchClause0)
    ListPlusOfCatchClause0        -> <cons>(CatchClause,ListStarOfCatchClause0)
    OptExpr0                      -> <some>(Expr)
    OptExpr0                      -> <none>()
    OptId0                        -> <some>(Id)
    OptId0                        -> <none>()
    ListStarOfBlockStm0           -> ListPlusOfBlockStm0
    ListStarOfBlockStm0           -> <nil>()
    ListStarOfBlockStm0           -> <conc>(ListStarOfBlockStm0,ListStarOfBlockStm0)
    ListPlusOfBlockStm0           -> <conc>(ListStarOfBlockStm0,ListPlusOfBlockStm0)
    ListPlusOfBlockStm0           -> <conc>(ListPlusOfBlockStm0,ListStarOfBlockStm0)
    ListPlusOfBlockStm0           -> <conc>(ListPlusOfBlockStm0,ListPlusOfBlockStm0)
    ListPlusOfBlockStm0           -> <cons>(BlockStm,ListStarOfBlockStm0)
    ListStarOfSwitchLabel0        -> ListPlusOfSwitchLabel0
    ListStarOfSwitchLabel0        -> <nil>()
    ListStarOfSwitchLabel0        -> <conc>(ListStarOfSwitchLabel0,ListStarOfSwitchLabel0)
    ListPlusOfSwitchLabel0        -> <conc>(ListStarOfSwitchLabel0,ListPlusOfSwitchLabel0)
    ListPlusOfSwitchLabel0        -> <conc>(ListPlusOfSwitchLabel0,ListStarOfSwitchLabel0)
    ListPlusOfSwitchLabel0        -> <conc>(ListPlusOfSwitchLabel0,ListPlusOfSwitchLabel0)
    ListPlusOfSwitchLabel0        -> <cons>(SwitchLabel,ListStarOfSwitchLabel0)
    ListStarOfSwitchGroup0        -> ListPlusOfSwitchGroup0
    ListStarOfSwitchGroup0        -> <nil>()
    ListStarOfSwitchGroup0        -> <conc>(ListStarOfSwitchGroup0,ListStarOfSwitchGroup0)
    ListPlusOfSwitchGroup0        -> <conc>(ListStarOfSwitchGroup0,ListPlusOfSwitchGroup0)
    ListPlusOfSwitchGroup0        -> <conc>(ListPlusOfSwitchGroup0,ListStarOfSwitchGroup0)
    ListPlusOfSwitchGroup0        -> <conc>(ListPlusOfSwitchGroup0,ListPlusOfSwitchGroup0)
    ListPlusOfSwitchGroup0        -> <cons>(SwitchGroup,ListStarOfSwitchGroup0)
    ListStarOfFieldMod0           -> ListPlusOfFieldMod0
    ListStarOfFieldMod0           -> <nil>()
    ListStarOfFieldMod0           -> <conc>(ListStarOfFieldMod0,ListStarOfFieldMod0)
    ListPlusOfFieldMod0           -> <conc>(ListStarOfFieldMod0,ListPlusOfFieldMod0)
    ListPlusOfFieldMod0           -> <conc>(ListPlusOfFieldMod0,ListStarOfFieldMod0)
    ListPlusOfFieldMod0           -> <conc>(ListPlusOfFieldMod0,ListPlusOfFieldMod0)
    ListPlusOfFieldMod0           -> <cons>(FieldMod,ListStarOfFieldMod0)
    ListStarOfVarInit0            -> ListPlusOfVarInit0
    ListStarOfVarInit0            -> <nil>()
    ListStarOfVarInit0            -> <conc>(ListStarOfVarInit0,ListStarOfVarInit0)
    ListPlusOfVarInit0            -> <conc>(ListStarOfVarInit0,ListPlusOfVarInit0)
    ListPlusOfVarInit0            -> <conc>(ListPlusOfVarInit0,ListStarOfVarInit0)
    ListPlusOfVarInit0            -> <conc>(ListPlusOfVarInit0,ListPlusOfVarInit0)
    ListPlusOfVarInit0            -> <cons>(VarInit,ListStarOfVarInit0)
    ListStarOfElemVal0            -> ListPlusOfElemVal0
    ListStarOfElemVal0            -> <nil>()
    ListStarOfElemVal0            -> <conc>(ListStarOfElemVal0,ListStarOfElemVal0)
    ListPlusOfElemVal0            -> <conc>(ListStarOfElemVal0,ListPlusOfElemVal0)
    ListPlusOfElemVal0            -> <conc>(ListPlusOfElemVal0,ListStarOfElemVal0)
    ListPlusOfElemVal0            -> <conc>(ListPlusOfElemVal0,ListPlusOfElemVal0)
    ListPlusOfElemVal0            -> <cons>(ElemVal,ListStarOfElemVal0)
    ListStarOfElemValPair0        -> ListPlusOfElemValPair0
    ListStarOfElemValPair0        -> <nil>()
    ListStarOfElemValPair0        -> <conc>(ListStarOfElemValPair0,ListStarOfElemValPair0)
    ListPlusOfElemValPair0        -> <conc>(ListStarOfElemValPair0,ListPlusOfElemValPair0)
    ListPlusOfElemValPair0        -> <conc>(ListPlusOfElemValPair0,ListStarOfElemValPair0)
    ListPlusOfElemValPair0        -> <conc>(ListPlusOfElemValPair0,ListPlusOfElemValPair0)
    ListPlusOfElemValPair0        -> <cons>(ElemValPair,ListStarOfElemValPair0)
    ListStarOfId1                 -> ListPlusOfId0
    ListStarOfId1                 -> <nil>()
    ListStarOfId1                 -> <conc>(ListStarOfId1,ListStarOfId1)
    ListPlusOfId0                 -> <conc>(ListStarOfId1,ListPlusOfId0)
    ListPlusOfId0                 -> <conc>(ListPlusOfId0,ListStarOfId1)
    ListPlusOfId0                 -> <conc>(ListPlusOfId0,ListPlusOfId0)
    ListPlusOfId0                 -> <cons>(Id,ListStarOfId1)
    Start                         -> StartApricot(CompilationUnit)
    CompilationUnit               -> CompilationUnit(OptPackageDec0,ListStarOfImportDec0,ListPlusOfTypeDec0)
    TypeDec                       -> Semicolon()
    TypeDec                       -> InterfaceDec
    TypeDec                       -> ClassDec
    ImportDec                     -> StaticImportOnDemandDec(TypeName)
    ImportDec                     -> StaticImportDec(TypeName,Id)
    ImportDec                     -> TypeImportOnDemandDec(PackageName)
    ImportDec                     -> TypeImportDec(TypeName)
    PackageDec                    -> PackageDec(ListStarOfAnno0,PackageName)
    EndOfFile                     -> <string>
    CarriageReturn                -> <string>
    LineTerminator                -> <string>
    MethodSpec                    -> GenericMethod(AmbName,Id)
    MethodSpec                    -> QSuperMethod(TypeName,Id)
    MethodSpec                    -> SuperMethod(Id)
    MethodSpec                    -> Method(Expr,Id)
    MethodSpec                    -> Method(MethodName)
    Expr                          -> Invoke(MethodSpec,ListStarOfExpr0)
    Expr                          -> PostDecr(Expr)
    Expr                          -> PostIncr(Expr)
    Expr                          -> ExprName
    Expr                          -> QThis(TypeName)
    Expr                          -> This()
    ClassLiteral                  -> VoidClass()
    ClassLiteral                  -> Class(Type)
    Literal                       -> ClassLiteral
    Literal                       -> NullLiteral
    Literal                       -> StringLiteral
    Literal                       -> CharLiteral
    Literal                       -> BoolLiteral
    Literal                       -> FloatLiteral
    Literal                       -> IntLiteral
    Expr                          -> Lit(Literal)
    NullLiteral                   -> Null()
    NullLiteral                   -> Null()
    StringChars                   -> <string>
    StringPart                    -> EscapeSeq
    StringPart                    -> UnicodeEscape
    StringPart                    -> Chars(StringChars)
    StringLiteral                 -> String(ListStarOfStringPart0)
    SingleChar                    -> <int>
    CharContent                   -> EscapeSeq
    CharContent                   -> UnicodeEscape
    CharContent                   -> Single(SingleChar)
    CharLiteral                   -> Char(CharContent)
    UnicodeEscape                 -> UnicodeEscape(ListPlusOfCharClass1,<int>,<int>,<int>,<int>)
    LastOcta                      -> <int>
    OctaEscape                    -> OctaEscape3(<int>,<int>,<int>)
    OctaEscape                    -> OctaEscape2(<int>,<int>)
    OctaEscape                    -> OctaEscape2(<int>,LastOcta)
    OctaEscape                    -> OctaEscape1(LastOcta)
    NamedEscape                   -> NamedEscape(<int>)
    EscapeSeq                     -> NamedEscape
    EscapeSeq                     -> OctaEscape
    Bool                          -> False()
    Bool                          -> True()
    Bool                          -> False()
    Bool                          -> True()
    BoolLiteral                   -> Bool(Bool)
    BinaryExponent                -> <string>
    HexaSignificand               -> <string>
    HexaFloatNumeral              -> <string>
    SignedInteger                 -> <string>
    DeciFloatExponentPart         -> <string>
    DeciFloatDigits               -> <string>
    DeciFloatNumeral              -> <string>
    FloatLiteral                  -> Float(HexaFloatLiteral)
    FloatLiteral                  -> Float(DeciFloatLiteral)
    HexaFloatLiteral              -> <string>
    DeciFloatLiteral              -> <string>
    IntLiteral                    -> Octa(OctaLiteral)
    IntLiteral                    -> Hexa(HexaLiteral)
    IntLiteral                    -> Deci(DeciLiteral)
    OctaNumeral                   -> <string>
    HexaNumeral                   -> <string>
    DeciNumeral                   -> <string>
    OctaLiteral                   -> <string>
    HexaLiteral                   -> <string>
    DeciLiteral                   -> <string>
    ArraySubscript                -> Expr
    ArrayAccess                   -> ArrayAccess(Expr,ArraySubscript)
    Expr                          -> ArrayAccess
    LHS                           -> ArrayAccess
    LHS                           -> FieldAccess
    LHS                           -> ExprName
    Expr                          -> AssignMinus(LHS,Expr)
    Expr                          -> AssignPlus(LHS,Expr)
    Expr                          -> AssignRemain(LHS,Expr)
    Expr                          -> AssignDiv(LHS,Expr)
    Expr                          -> AssignMul(LHS,Expr)
    Expr                          -> Assign(LHS,Expr)
    CondMid                       -> Expr
    Expr                          -> Cond(Expr,CondMid,Expr)
    Expr                          -> LogicXOR(Expr,Expr)
    Expr                          -> LogicOr(Expr,Expr)
    Expr                          -> LogicAnd(Expr,Expr)
    Expr                          -> LogicIn(Expr,Expr)
    Expr                          -> Asynchronous(Expr,Expr)
    Expr                          -> Synchronous(Expr,Expr)
    Expr                          -> NotEq(Expr,Expr)
    Expr                          -> Eq(Expr,Expr)
    Expr                          -> GtEq(Expr,Expr)
    Expr                          -> LtEq(Expr,Expr)
    Expr                          -> Gt(Expr,Expr)
    Expr                          -> Lt(Expr,Expr)
    Expr                          -> Minus(Expr,Expr)
    Expr                          -> Plus(Expr,Expr)
    Expr                          -> Remain(Expr,Expr)
    Expr                          -> Div(Expr,Expr)
    Expr                          -> Mul(Expr,Expr)
    Expr                          -> InstanceOf(Expr,RefType)
    Expr                          -> CastRef(RefType,Expr)
    Expr                          -> CastPrim(PrimType,Expr)
    Expr                          -> Not(Expr)
    Expr                          -> PreDecr(Expr)
    Expr                          -> PreIncr(Expr)
    Expr                          -> Minus(Expr)
    Expr                          -> Plus(Expr)
    FieldAccess                   -> QSuperField(TypeName,Id)
    FieldAccess                   -> SuperField(Id)
    FieldAccess                   -> Field(Expr,Id)
    Expr                          -> FieldAccess
    DimExpr                       -> Dim(Expr)
    ArrayBaseType                 -> TypeName
    ArrayBaseType                 -> PrimType
    ArrayCreationExpr             -> NewArray(ArrayBaseType,ListPlusOfDim0,ArrayInit)
    ArrayCreationExpr             -> NewArray(ArrayBaseType,ListPlusOfDimExpr0,ListStarOfDim0)
    Expr                          -> ArrayCreationExpr
    Expr                          -> NewInstance(ClassOrInterfaceType,ListStarOfExpr0,OptClassBody0)
    ClassMemberDec                -> Semicolon()
    ClassMemberDec                -> InterfaceDec
    ClassMemberDec                -> ClassDec
    ClassMemberDec                -> MethodDec
    ClassMemberDec                -> FieldDec
    ClassBodyDec                  -> ConstrDec
    ClassBodyDec                  -> InstanceInit
    ClassBodyDec                  -> ClassMemberDec
    Interfaces                    -> ImplementsDec(ListPlusOfInterfaceType0)
    Super                         -> SuperDec(ClassType)
    ClassMod                      -> Private
    ClassMod                      -> Public
    ClassDecHead                  -> ClassDecHead(ListStarOfAnno0,ListStarOfClassMod0,OptSuper0,OptInterfaces27,Id)
    ClassBody                     -> ClassBody(ListStarOfClassBodyDec0)
    ClassDec                      -> ClassDec(ClassDecHead,ClassBody)
    InterfaceMod                  -> Private
    InterfaceMod                  -> Public
    InterfaceMemberDec            -> Semicolon()
    InterfaceMemberDec            -> InterfaceDec
    InterfaceMemberDec            -> ClassDec
    InterfaceMemberDec            -> ConstantDec
    ExtendsInterfaces             -> ExtendsInterfaces(ListStarOfInterfaceMod0,ListPlusOfInterfaceType0)
    InterfaceDecHead              -> InterfaceDecHead(OptExtendsInterfaces5,Id)
    InterfaceDecHead              -> InterfaceDecHead(ListStarOfAnno0,OptExtendsInterfaces5,Id)
    InterfaceDec                  -> InterfaceDec(InterfaceDecHead,ListStarOfInterfaceMemberDec0)
    InterfaceDec                  -> AnnoDec
    DefaultVal                    -> DefaultVal(ElemVal)
    AnnoElemDec                   -> Semicolon()
    AnnoElemDec                   -> AnnoDec
    AnnoElemDec                   -> InterfaceDec
    AnnoElemDec                   -> ClassDec
    AnnoElemDec                   -> ConstantDec
    AnnoDecHead                   -> AnnoDecHead(ListStarOfInterfaceMod0,Id)
    AnnoDecHead                   -> AnnoDecHead(ListStarOfAnno0,Id)
    AnnoDec                       -> AnnoDec(AnnoDecHead,ListStarOfAnnoElemDec0)
    ConstantMod                   -> Public
    ConstantDec                   -> ConstantDec(ListStarOfConstantMod0,Type,ListPlusOfVarDec0)
    ConstantDec                   -> ConstantDec(ListStarOfAnno0,Type,ListPlusOfVarDec0)
    ConstrMod                     -> Private
    ConstrMod                     -> Public
    ConstrInv                     -> QSuperConstrInv(Expr,ListStarOfExpr0)
    ConstrInv                     -> SuperConstrInv(ListStarOfExpr0)
    ConstrInv                     -> AltConstrInv(ListStarOfExpr0)
    ConstrBody                    -> ConstrBody(OptConstrInv0,ListStarOfBlockStm0)
    ConstrHead                    -> ConstrDecHead(ListStarOfAnno0,ListStarOfConstrMod0,Id,ListStarOfFormalParam0)
    ConstrDec                     -> ConstrDec(ConstrHead,ConstrBody)
    InstanceInit                  -> InstanceInit(Block)
    MethodBody                    -> NoMethodBody()
    MethodBody                    -> Block
    ExceptionType                 -> ClassType
    MethodMod                     -> Native
    MethodMod                     -> Private
    MethodMod                     -> Public
    FormalParam                   -> Param(ListStarOfAnno0,Type,VarDecId)
    ResultType                    -> Void()
    ResultType                    -> Type
    MethodDecHead                 -> MethodDecHead(ListStarOfAnno0,ListStarOfMethodMod0,ResultType,Id,ListStarOfFormalParam0)
    MethodDec                     -> MethodDec(MethodDecHead,MethodBody)
    BlockStm                      -> Stm
    BlockStm                      -> ClassDecStm(ClassDec)
    BlockStm                      -> LocalVarDecStm
    Block                         -> Block(ListStarOfBlockStm0)
    CatchClause                   -> Catch(FormalParam,Block)
    Stm                           -> Try(Block,ListStarOfCatchClause0,Block)
    Stm                           -> Try(Block,ListPlusOfCatchClause0)
    Stm                           -> Synchronized(Expr,Block)
    Stm                           -> Throw(Expr)
    Stm                           -> Return(OptExpr0)
    Stm                           -> Continue(OptId0)
    Stm                           -> Break(OptId0)
    Stm                           -> ForEach(FormalParam,Expr,Stm)
    Stm                           -> For(ListStarOfExpr0,OptExpr0,ListStarOfExpr0,Stm)
    Stm                           -> For(LocalVarDec,OptExpr0,ListStarOfExpr0,Stm)
    Stm                           -> DoWhile(Stm,Expr)
    Stm                           -> While(Expr,Stm)
    SwitchLabel                   -> Default()
    SwitchLabel                   -> Case(Expr)
    SwitchGroup                   -> SwitchGroup(ListPlusOfSwitchLabel0,ListPlusOfBlockStm0)
    SwitchBlock                   -> SwitchBlock(ListStarOfSwitchGroup0,ListStarOfSwitchLabel0)
    Stm                           -> Switch(Expr,SwitchBlock)
    Stm                           -> AssertStm(Expr,Expr)
    Stm                           -> AssertStm(Expr)
    Stm                           -> If(Expr,Stm,Stm)
    Stm                           -> If(Expr,Stm)
    Stm                           -> ExprStm(Expr)
    Stm                           -> Labeled(Id,Stm)
    Stm                           -> Empty()
    Stm                           -> Block
    LocalVarDec                   -> LocalVarDec(ListStarOfAnno0,Type,ListPlusOfVarDec0)
    LocalVarDecStm                -> LocalVarDecStm(LocalVarDec)
    FieldMod                      -> Private
    FieldMod                      -> Public
    VarInit                       -> ArrayInit
    VarInit                       -> Expr
    Dim                           -> Dim()
    VarDecId                      -> ArrayVarDecId(Id,ListPlusOfDim0)
    VarDecId                      -> Id
    VarDec                        -> VarDec(VarDecId,VarInit)
    VarDec                        -> VarDec(VarDecId)
    FieldDec                      -> FieldDec(ListStarOfAnno0,ListStarOfFieldMod0,Type,ListPlusOfVarDec0)
    ArrayInit                     -> ArrayInit(ListStarOfVarInit0)
    ArrayInit                     -> ArrayInit(ListStarOfVarInit0)
    ElemVal                       -> ElemValArrayInit(ListStarOfElemVal0)
    ElemVal                       -> ElemValArrayInit(ListStarOfElemVal0)
    ElemVal                       -> Anno
    ElemVal                       -> Expr
    ElemValPair                   -> ElemValPair(Id,ElemVal)
    Anno                          -> MarkerAnno(TypeName)
    Anno                          -> SingleElemAnno(TypeName,ElemVal)
    Anno                          -> Anno(TypeName,ListStarOfElemValPair0)
    ArrayType                     -> ArrayType(Type)
    TypeDecSpec                   -> Member(TypeDecSpec,Id)
    TypeDecSpec                   -> TypeName
    InterfaceType                 -> InterfaceType(TypeDecSpec)
    ClassType                     -> ClassType(TypeDecSpec)
    ClassOrInterfaceType          -> ClassOrInterfaceType(TypeDecSpec)
    RefType                       -> ArrayType
    RefType                       -> ClassOrInterfaceType
    Type                          -> MathType
    Type                          -> RefType
    Type                          -> PrimType
    MathType                      -> RealMath()
    MathType                      -> IntMath()
    FloatType                     -> real()
    IntType                       -> int()
    NumType                       -> FloatType
    NumType                       -> IntType
    PrimType                      -> Boolean()
    PrimType                      -> NumType
    PackageOrTypeName             -> PackageOrTypeName(PackageOrTypeName,Id)
    PackageOrTypeName             -> PackageOrTypeName(Id)
    MethodName                    -> MethodName(AmbName,Id)
    MethodName                    -> MethodName(Id)
    ExprName                      -> ExprName(AmbName,Id)
    ExprName                      -> ExprName(Id)
    TypeName                      -> TypeName(PackageOrTypeName,Id)
    TypeName                      -> TypeName(Id)
    AmbName                       -> AmbName(AmbName,Id)
    AmbName                       -> AmbName(Id)
    PackageName                   -> PackageName(ListPlusOfId0)
    Modifier                      -> Native
    Modifier                      -> Private
    Modifier                      -> Public
    Native                        -> Native()
    Private                       -> Private()
    Public                        -> Public()
    Id                            -> Id(ID)
    ID                            -> <string>
    Keyword                       -> <string>
